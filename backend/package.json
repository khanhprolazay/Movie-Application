{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build:api-gateway": "nest build api-gateway",
    "build:auth-service": "nest build auth-service",
    "build:user-service": "nest build user-service",
    "build:movie-service": "nest build movie-service",
    "docker:clear:cache": "docker system prune -a",
    "docker:build:api-gateway": "docker build --no-cache -f ./apps/api-gateway/Dockerfile -t api-gateway:version1 .",
    "docker:build:auth-service": "docker build --no-cache -f ./apps/auth-service/Dockerfile -t auth-service:version1 .",
    "docker:build:user-service": "docker build --no-cache -f ./apps/user-service/Dockerfile -t user-service:version1 .",
    "docker:build:movie-service": "docker build --no-cache -f ./apps/movie-service/Dockerfile -t movie-service:version1 .",
    "docker:build:all": "concurrently --kill-others \"npm run docker:build:api-gateway\" \"npm run docker:build:auth-service\" \"npm run docker:build:user-service\" \"npm run docker:build:movie-service\"",
    "docker:export:api-gateway": "docker save -o ./tar/api-gateway.tar api-gateway:version1",
    "docker:export:auth-service": "docker save -o ./tar/auth-service.tar auth-service:version1",
    "docker:export:user-service": "docker save -o ./tar/user-service.tar user-service:version1",
    "docker:export:movie-service": "docker save -o ./tar/movie-service.tar movie-service:version1",
    "docker:export:all": "concurrently --kill-others \"npm run docker:export:api-gateway\" \"npm run docker:export:auth-service\" \"npm run docker:export:user-service\" \"npm run docker:export:movie-service\"",
    "start:dev:api-gateway": "cross-env NODE_ENV=development nest start api-gateway --watch",
    "start:dev:auth-service": "cross-env NODE_ENV=development nest start auth-service --watch",
    "start:dev:user-service": "cross-env NODE_ENV=development nest start user-service --watch",
    "start:dev:movie-service": "cross-env NODE_ENV=development nest start movie-service --watch",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/backend/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/backend/test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/cache-manager": "^2.1.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.1.1",
    "@nestjs/microservices": "^10.2.7",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.1.14",
    "@nestjs/typeorm": "^10.0.0",
    "argon2": "^0.31.1",
    "axios": "^1.5.1",
    "cache-manager": "^5.2.4",
    "cache-manager-redis-yet": "^4.1.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cross-env": "^7.0.3",
    "date-fns": "^2.30.0",
    "dotenv": "^16.3.1",
    "kafkajs": "^2.2.4",
    "mysql2": "^3.6.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.17",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.1",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/shared(|/.*)$": "<rootDir>/libs/shared/src/$1"
    }
  }
}
